    For giving rank of each contious series
    np.array(a.groupby(['vin',(a['partial_charge'] != a['partial_charge'].shift()).cumsum()]).cumcount()+1)
    
    np.array(a.groupby(['a','b']).cumcount()+1)
    
    import itertools
    def expandgrid(*itrs):
        product = list(itertools.product(*itrs))
        return {'Var{}'.format(i+1):[x[i] for x in product] for i in range(len(itrs))}
    
    a=[1,2,4]
    b=['a','b']
    c=['c','d']
    pd.DataFrame(expandgrid(a,b,c))

# import re
# a=' orgjyfd jygdsfs orgpy jdjfjy ori,'
# bb=a.split()
# b=['jdfgjy','orgpy','ori']
# def intersection(a,b):
#     lis=[x for x in b for a in bb if x in a]
#     return(lis)
# data['final']=data.apply(lambda x:intersection(x['split_text'],keywords),axis=1)
# data['final']=data.apply(lambda x:intersection(x['split_text'],keywords),axis=1)
# re.findall(r'(^|\s)ori(\s|$|[.]|[,])', a)


# go to website of interest
browser.get("https://google.com")

# to get list of all id's from page
ids = browser.find_elements_by_xpath('//*[@id]')

for i in ids:
    print(i.get_attribute('id'))
    
    
from matplotlib.ticker import FuncFormatter
sns.set(style="darkgrid")    
fig, ax = plt.subplots(figsize=(8, 5))    
palette = sns.color_palette("bright", 4)
g=df.groupby('Q_no')['Revenue New Orders'].sum().plot()
f = lambda x, pos: f'{x/10**6:,.0f}M'
ax.yaxis.set_major_formatter(FuncFormatter(f))
